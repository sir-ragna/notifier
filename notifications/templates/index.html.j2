{% extends "base.html.j2" %}

{% block content %}

<div class="row justify-content-between">
    <div class="col col-auto">
        <a href="{% url 'index' %}?amount={{ amount }}&page={{ previous }}"
        >Previous</a>
        <br>
        <a href="{% url 'index' %}?amount={{ amount }}&page={{ nextpage }}"
        >Next</a>
        <br><br>
        <a href="{% url 'manage customers' %}">Customers</a>
        <br>
        <a href="{% url 'create notification' %}">Manually create a notification</a>
    </div>
    <div class="col col-auto">
    <form method="GET">
    <table>
        {{ filter_form.as_table }}
        <tr>
        <td><a href="{% url 'index' %}" class="btn btn-secondary">Reset</a></td>
        <td><button class="btn btn-primary" type="submit">Apply</button></td>
        </tr>
    </table>
    </form>
    </div>
</div>

<hr>

<table class="table">
<thead>
    <tr>
        <!-- <th>id</td> -->
        <th>Time</th>
        <th>Description</th>
        <th>Customer</th>
        <th>System</th>
        <th title="attachments">ðŸ“Ž</th>
    </tr>
<thead>
<tbody id="notifications_lines">
{% for n in notifications %}
    <tr>
        <!-- <td>{{ n.id }}</td> -->
        <td title="{{ n.id }}">{{ n.time | date:'Y-m-d H:i:s' }}</td>
        <td>{{ n.description }}</td>
        <td>{{ n.customer.name }}</td>
        <td title="{{ n.source_ip }}">{{ n.system }}</td>
        <td>
        {% if n.attachment_path %}
            <a href="{{ n.attachment_path }}" download>DownloadðŸ“Ž</a>
        {% else %}
            _
        {% endif %}
        </td>
    </tr>
{% endfor %}
</tbody>
</table>

<div class="row">
    <div class="col">
    </div>
    <div class="col-md-auto">
        <a href="{% url 'index' %}?amount={{ amount }}&page={{ previous }}"
        >Previous</a>
    </div>
    <div class="col">
    </div>
    <div class="col-md-auto">
        <a href="{% url 'index' %}?amount={{ amount }}&page={{ nextpage }}"
        >Next</a>
    </div>
    <div class="col">
    </div>
</div>
<hr>

{% endblock content %}

{% block footer %}
<script>
let total_new_notifications = 0;

function retrieve_notifications() {
    let notifications_tbl = document.getElementById("notifications_lines");
    let id = 0;
    if (notifications_tbl.rows.length > 0) {
        let top = notifications_tbl.rows[0];
        id = top.firstElementChild.title
    }

    let url = window.location + '';
    if (url.indexOf('?') == -1) {
        url += '?from=' + id;
    } else {
        url += '&from=' + id;
    }
    fetch(url, {headers: { 'Content-Type': 'application/json' } }
    ).then(result => result.json()
    ).then(function(data){
        let notifications = data.notifications;
        let i = notifications.length;
        total_new_notifications += i;
        while (i--) //for(let i = 0; i < notifications.length; ++i)
        {
            let notification = notifications[i];
            let tr = document.createElement('tr');
            // Set row styling
            tr.className = "bg-info";

            let time = document.createElement('td');
            time.innerHTML = notification.time.replace('T', ' ').split('.')[0];
                                            /* Fix time notation */
            time.title = notification.id;
            tr.appendChild(time);

            let description = document.createElement('td');
            description.innerHTML = notification.description;
            tr.appendChild(description);

            let customerName = document.createElement('td');   
            for(let j = 0; j < data.customers.length; ++j)
            {
                if (data.customers[j].id == notification.customer_id) {
                    customerName.innerHTML = data.customers[j].name;
                    break;
                }
            }
            tr.appendChild(customerName);

            let system = document.createElement('td');
            system.innerHTML = notification.system;
            system.title = notification.source_ip;
            tr.appendChild(system);

            let attachment = document.createElement('td');
            if (notification.attachment_path) {
                attachment.innerHTML = "<a download=\"\" href=\"" + notification.attachment_path + "\">DownloadðŸ“Ž</a>";
            } else {
                attachment.innerHTML = "-";
            }
            tr.appendChild(attachment);

            notifications_tbl.prepend(tr);
        }

        if (total_new_notifications > 0) {
            document.title = notifications.length + " NEW notifications";
        }
    });


    // Call the retrieve notifications function again after 20 seconds
    setTimeout(retrieve_notifications, 20000);
}

setTimeout(retrieve_notifications, 20000);

window.onfocus = function() {
    document.title = "Notifier";
    total_new_notifications = 0;
}

</script>
{% endblock footer %}